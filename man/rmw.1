.TH RMW "1" "May 2021" "rmw 0.8.0-dev" "User Commands"
.SH NAME
rmw \- safe-remove utility for the command line
.SH SYNOPSIS
.B rmw
[\fI\,OPTION\/\fR]... \fI\,FILE\/\fR...
.SH DESCRIPTION
rmw (ReMove to Waste) is a safe-remove utility for the command line.
Its goal is compliance with the [the FreeDesktop.org Trash
specification](https://specifications.freedesktop.org/trash-spec/trashspec-latest.html),
which is used by environments such as KDE, GNOME, and Xfce. By default,
rmw will only use a waste directory separated from your desktop trash,
though it can also be integrated with your normal desktop trash folder.
One of its unique features is the ability to purge items from your
Waste/Trash directories after x number of days.

ReMove the FILE(s) to a WASTE directory listed in configuration file
.IP
or: rmw \fB\-s\fR
or: rmw \fB\-u\fR
or: rmw \fB\-z\fR FILE...
.PP
Restore FILE(s) from a WASTE directory
.SH OPTIONS
.TP
\fB\-h\fR, \fB\-\-help\fR
show help for command line options
.TP
\fB\-c\fR, \fB\-\-config\fR filename
use an alternate configuration
.TP
\fB\-l\fR, \fB\-\-list\fR
list waste directories
.TP
\fB\-g[N_DAYS]\fR, \fB\-\-purge\fR[=\fI\,N_DAYS\/\fR]
purge expired files;
optional argument 'N_DAYS' overrides 'expire_age'
value from the configuration file
(Examples: \fB\-g90\fR, \fB\-\-purge\fR=\fI\,90\/\fR)
.IP
By default, purging is disabled ('expire_age' is set to '0' in the
configuration file). To enable, set the 'expire_age' value in your
config file to a value greater than '0' (Example: If '45' is specified,
rmw will permanently delete files that have been in the waste (or
trash) for more than 45 days.

The value of 'purge_after' can be temporarily overridden by using
-g[N_DAYS] or --purge[=NDAYS].

The time of the last check for expired items is stored in `purge-time`,
located in $HOME/.local/share/rmw (or $XDG_DATA_HOME/rmw).

You can use '-vvg' to see when the remaining files in the waste
directories will expire.
.TP
\fB\-o\fR, \fB\-\-orphaned\fR
check for orphaned files (maintenance)
.IP
An orphan is an item in a waste directory that has no corresponding
.trashinfo file<https://remove-to-waste.info/faq.html#dot_trashinfo>,
or vice versa. This option is intended primarily for developers.
Orphans should only happen while testing code changes, if there's a bug
released with rmw or another program that interfaces with your waste
directories.
.TP
\fB\-f\fR, \fB\-\-force\fR
allow purging of expired files
.IP
rmw will refuse to purge directories if they contain non-writable files
or subdirectories. rmw will show a message that tells you "permission
denied; directory still contains files". To override, you can re-run
rmw using '-ffg'.
.TP
\fB\-e\fR, \fB\-\-empty\fR
completely empty (purge) all waste directories
.TP
\fB\-r\fR, \fB\-R\fR, \fB\-\-recursive\fR
option used for compatibility with rm
(recursive operation is enabled by default)
.TP
\fB\-v\fR, \fB\-\-verbose\fR
increase output messages
.TP
\fB\-w\fR, \fB\-\-warranty\fR
display warranty
.TP
\fB\-V\fR, \fB\-\-version\fR
display version and license information
.IP
.SH RESTORING
.HP
\fB\-z\fR, \fB\-\-restore\fR <wildcard filename(s) pattern> (e.g. ~/.local/share/Waste/files/foo*)
.IP
To restore items, specify the path to them in the <WASTE>/files
directory (wildcards ok).

    rmw -z ~/.local/share/Waste/files/foo
    rmw -z ~/.local/share/Waste/files/bars*

When restoring an item, if a file or directory with the same name
already exists at the destination, the item being restored will have a
time/date string (formatted as "_%H%M%S-%y%m%d") appended to it (e.g. 'foo_164353-210508').
.TP
\fB\-s\fR, \fB\-\-select\fR
select files from list to restore
.IP
Displays a list of items in your waste directories. You can use the
left/right cursor keys to switch between waste directories. Use the
space bar to select the items you wish to restore, then press enter to
restore all selected items.
.TP
\fB\-u\fR, \fB\-\-undo\-last\fR
undo last ReMove
.IP
Restores files that were last rmw'ed. No arguments for `-u` are
necessary. The list of files that were last rmw'ed is stored in `mrl`,
located in $HOME/.local/share/rmw (or $XDG_DATA_HOME/rmw).
.TP
\fB\-m\fR, \fB\-\-most\-recent\-list\fR
list most recently rmw'ed files
.PP
Visit the rmw home page for more help, and information about
how to obtain support \- <https://remove\-to\-waste.info/>

.SH CONFIGURATION FILE
Waste directories will be created automatically (Except for when the ',removable'
option is used; see below) e.g., if '$HOME/.local/share/Waste' is uncommented in
the config file, these two directories will be created:

    $HOME/.local/share/Waste/files
    $HOME/.local/share/Waste/info

If one of the WASTE directories is on removable media, you may append ',removable'.
In that case, rmw will not try to create it; it must be
initially created manually. When rmw runs, it will check to see if the
directory exists (which means the removable media containing the
directory is currently mounted). If rmw can't find the directory, it is
assumed the media containing the directory isn't mounted and that
directory will not be used for the current run of rmw.

With the media mounted, once you manually create the waste directory
for that device (e.g. ".Trash-$UID") and run rmw, it will automatically
create the two required sub-directories "Trash-$UID/info" and
".Trash-$UID/files". The directory you create must match what's
included in your config file:

    e.g.: WASTE=/mnt/flash/.Trash-$UID, removable
.SH "REPORTING BUGS"
Report bugs to <https://github.com/theimpossibleastronaut/rmw/issues>.
.PP
.br
Author: Andy Alt (andy400\-dev@yahoo.com)
.br
The RMW team: see AUTHORS file
.br
This program comes with ABSOLUTELY NO WARRANTY; for details type 'rmw \fB\-w\fR.'
.br
This is free software, and you are welcome to redistribute it
under certain conditions; see <http://www.gnu.org/licenses/gpl.html>
for details.
.SH "SEE ALSO"
