name: C/C++ CI

on:
  push:
    branches: master
    paths-ignore:
    - '**/*.md'
    - '.github/workflows/codeql-analysis.yml'
    - '.github/workflows/coverity.yml'
  pull_request:
    branches: master
    paths-ignore:
    - '**/*.md'
    - '.github/workflows/codeql-analysis.yml'
    - '.github/workflows/coverity.yml'

env:
  TERM: xterm

jobs:
  ubuntu-latest:
    strategy:
      fail-fast: false
      matrix:
        arch: [x64]
        os: [ubuntu-latest]
        compiler: [gcc-9, gcc-11, clang-10]
    runs-on: ${{ matrix.os }}
    env:
      MATRIX_OS: ${{ matrix.os }}
      MATRIX_ARCH: ${{ matrix.arch }}
      CC: ${{ matrix.compiler }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install dependencies
      run: |
        if [ -z "${CC##*$clang*}" ]; then
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal main"
          sudo apt-get update -qq
          sudo apt-get install -y $CC
        else
          if  [ "$CC" = "gcc-11" ]; then
            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6B05F25D762E3157;
            sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
          fi
          sudo apt-get update -qq;
          sudo apt-get install -y $CC
        fi
    - run: sh ./.github/scripts/all_tests.sh

  macos:
    runs-on: macos-latest
    env:
      PKG_CONFIG_PATH: "/usr/local/opt/ncurses/lib/pkgconfig:$PKG_CONFIG_PATH"
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: |
        brew update
        brew install ncurses meson
    - run: |
        meson builddir
        ninja -v -C builddir
        ninja -C builddir dist

  testfreebsd:
    runs-on: macos-10.15
    name: A job to run test FreeBSD
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Test in FreeBSD
      id: test
      uses: vmactions/freebsd-vm@v0.1.5
      with:
        usesh: true
        prepare: pkg install -y meson ninja gettext pkgconf
        run: |
          meson builddir
          ninja -v -C builddir
          ninja -C builddir test

