name: C/C++ CI
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: master
    paths:
    - '**'
    - '!**.yml'
    - '!**.md'
    - '!docker/**'
    - '!packaging/**'
    - '**/c-cpp.yml'
  pull_request:
    branches: master
    paths:
    - '**'
    - '!**.yml'
    - '!**.md'
    - '!docker/**'
    - '!packaging/**'
    - '**/c-cpp.yml'

env:
  TERM: xterm

jobs:
  build:
    name: ${{ matrix.build.name }}
    strategy:
      fail-fast: true
      matrix:
        build:
          - name: ubuntu-20.04-gcc
            os: ubuntu-20.04
            cc: gcc
          - name: ubuntu-20.04-clang
            os: ubuntu-20.04
            cc: clang
          - name: ubuntu-22.04-gcc
            os: ubuntu-22.04
            cc: gcc
          - name: ubuntu-22.04-clang
            os: ubuntu-22.04
            cc: clang
          - name: Slackware
            os: ubuntu-20.04
            container: 'andy5995/slackware-build-essential:15.0'
          - name: debian bullseye
            os: ubuntu-20.04
            container: 'andy5995/rmw-build-env:bullseye'
          - name: ubuntu-20.04-dist
            os: ubuntu-20.04
            dist: true
          - name: macos-latest
            os: macos-latest
            env:
              PKG_CONFIG_PATH="/usr/local/opt/ncurses/lib/pkgconfig:${PKG_CONFIG_PATH}"

    runs-on: ${{ matrix.build.os }}
    container: ${{ matrix.build.container }}
    env:
      CC: '${{ matrix.build.cc }}'
    steps:

    - uses: actions/checkout@v3
      with:
        submodules: true

    - if: ${{ env.CC }}
      run: |
        if [ "$CC" = "gcc" ]; then
          CXX=g++
        else
          CXX=clang++
        fi
        echo "CXX=${CXX}" >> $GITHUB_ENV

    - name: Show info
      run: |
        export -p
        echo '${{ toJSON(matrix) }}'

    - if: ${{ contains(matrix.build.os, 'macos') }}
      run: |
        echo "PKG_CONFIG_PATH=/usr/local/opt/ncurses/lib/pkgconfig:${PKG_CONFIG_PATH}" >> $GITHUB_ENV
        pip3 install meson ninja
        brew install ncurses

    #- if: ${{ contains(matrix.os, 'ubuntu') }}
      #run: |
        #sudo apt-get update -qq
        #sudo apt-get upgrade -y -qq

    #- if: ${{ matrix.cc == 'clang' && matrix.os != 'macos-latest' }}
      #run: sudo apt-get install -y $CC $CXX

    - if: ${{ contains(matrix.build.os, 'ubuntu') && matrix.build.container == null }}
      run: |
        sudo apt-get install -y \
          gettext \
          python3-pip \
          python3-setuptools
        sudo -H python3 -m pip install meson ninja

    - name: Configure
      run: meson setup builddir
    - name: Build
      run: |
        cd builddir
        ninja -v
    - name: Test
      run: cd builddir && meson test -v
    - name: Test fake media root
      run: cd builddir && meson test -v --setup=fake_media_root --suite rmw
    - if: ${{ matrix.build.dist == 'true' }}
      run: cd builddir && meson dist --include-subprojects

  freebsd:
    runs-on: macos-12
    name: FreeBSD Test
    env:
      PKG_CONFIG_PATH: '/usr/local/opt/ncurses/lib/pkgconfig:${PKG_CONFIG_PATH}'
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Test
      uses: vmactions/freebsd-vm@v0
      with:
        envs: 'PKG_CONFIG_PATH'
        usesh: true
        prepare:  |
          pkg install -y meson ninja gettext pkgconf
        run: |
          meson setup builddir
          cd builddir
          ninja -v
          meson test -v
          meson test -v --setup=fake_media_root --suite rmw
