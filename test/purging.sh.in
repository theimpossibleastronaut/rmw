#!/bin/sh
# purging.sh: tests rmw's purging facilities
#
# This script can be used to demonstrate the purging feature of rmw to
# new users, and for testing for bugs
#

. @abs_builddir@/VARS

if [ -e COMMON ]; then
  . ./COMMON
else
  . @abs_top_srcdir@/test/COMMON
fi

set -x

echo "== On first run, directories should get created"
# show commands that are run


$RMW_TEST_CMD_STRING
test_result $?

# Make some temporary files using a fake-year
mkdir $HOME/tmp-files
cd $HOME/tmp-files



echo "\n\n == creating temporary files to be rmw'ed"

for file in abc 123 xyz; do
  for _null in {1..4096}; do
    echo 0 >> $file
  done
done


cd $HOME/..
echo "\n\n == use a built-in environmental variable to write a"
echo " == fake year to the .trashinfo files when running rmw"
echo "-----------------------------------------------------\n"


RMWTRASH=fake-year $RMW_TEST_CMD_STRING --verbose -c $CONFIG $HOME/tmp-files/*
test_result $?


echo
echo
echo " == displaying a trashinfo; it shows a DeletionDate of 1999"


cat $HOME/.trash.rmw/info/abc.trashinfo
test_result $?


echo
echo
echo " == The trashinfo records that these files were rmw'ed in 1999"
echo " == So they will be purged now."


$BIN_DIR/rmw --verbose --purge -c $CONFIG
test_result $?


echo
echo
echo " == Test that the files are really gone"

test -z "$(ls -A $HOME/.trash.rmw/files)"
test_result $?
test -z "$(ls -A $HOME/.trash.rmw/info)"
test_result $?


echo
echo
echo " Creating some files for testing..."
cd $HOME
../create-some-files.sh
test_result $?

echo $SEPARATOR
echo " == rmw should be able to purge directories and subdirectories"
echo " == even if some of the dirs are read-only"

echo $SEPARATOR
RMWTRASH=fake-year $BIN_DIR/rmw --verbose -c $CONFIG $HOME/somefiles
test_result $?

echo $SEPARATOR
echo " == only one f, should fail"
$BIN_DIR/rmw -f --purge -c $CONFIG
test_result $?
echo $SEPARATOR
echo " == (files should still be present)"
test -z $(ls -A $HOME/.trash.rmw/files)
test_result_want_fail $?
test -z $(ls -A $HOME/.trash.rmw/info)
test_result_want_fail $?

echo $SEPARATOR
echo " == 2 f's, this should pass"
$BIN_DIR/rmw -ff --purge -c $CONFIG
test_result $?

echo
echo
echo " == Show that the files are really gone"

test -z $(ls -A $HOME/.trash.rmw/files)
test_result $?
test -z $(ls -A $HOME/.trash.rmw/info)
test_result $?

echo
echo
echo " Creating some files for testing..."
cd $HOME
../create-some-files.sh
test_result $?

echo
echo
echo " == preceding RMWTRASH=empty with the rmw command should completely"
echo " == purge the waste folders, no matter when they were deleted"

$RMW_TEST_CMD_STRING --verbose $HOME/somefiles
test_result $?

echo " == Should not work if 'f' isn't used"
output=`RMWTRASH=empty $RMW_ALT_TEST_CMD_STRING --purge`
test "$output" = "purge has been skipped: use -f or --force"
test_result $?

echo " == Should not work if '--purge' isn't used"
output=`RMWTRASH=empty $RMW_TEST_CMD_STRING -f`
test -z "$output"
test_result $?

echo " == Should not work if '--purge' and '-f' isn't used"
RMWTRASH=empty $RMW_TEST_CMD_STRING
test_result $?

echo
echo
echo " == Test that trash is not empty"

test -z "$(ls -A $HOME/.trash.rmw/files)"
test_result_want_fail $?
test -z "$(ls -A $HOME/.trash.rmw/info)"
test_result_want_fail $?

echo " == Try to empty now with required options"
RMWTRASH=empty $RMW_TEST_CMD_STRING --verbose -ff --purge
test_result $?

echo
echo
echo " == Test that the files are really gone"

test -z "$(ls -A $HOME/.trash.rmw/files)"
test_result $?
test -z "$(ls -A $HOME/.trash.rmw/info)"
test_result $?

exit 0
